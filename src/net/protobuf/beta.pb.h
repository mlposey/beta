// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: beta.proto

#ifndef PROTOBUF_beta_2eproto__INCLUDED
#define PROTOBUF_beta_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_beta_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsNodeImpl();
void InitDefaultsNode();
void InitDefaultsRouteImpl();
void InitDefaultsRoute();
void InitDefaultsRouteQueryImpl();
void InitDefaultsRouteQuery();
void InitDefaultsAddResponseImpl();
void InitDefaultsAddResponse();
inline void InitDefaults() {
  InitDefaultsNode();
  InitDefaultsRoute();
  InitDefaultsRouteQuery();
  InitDefaultsAddResponse();
}
}  // namespace protobuf_beta_2eproto
namespace betagrpc {
class AddResponse;
class AddResponseDefaultTypeInternal;
extern AddResponseDefaultTypeInternal _AddResponse_default_instance_;
class Node;
class NodeDefaultTypeInternal;
extern NodeDefaultTypeInternal _Node_default_instance_;
class Route;
class RouteDefaultTypeInternal;
extern RouteDefaultTypeInternal _Route_default_instance_;
class RouteQuery;
class RouteQueryDefaultTypeInternal;
extern RouteQueryDefaultTypeInternal _RouteQuery_default_instance_;
}  // namespace betagrpc
namespace betagrpc {

// ===================================================================

class Node : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:betagrpc.Node) */ {
 public:
  Node();
  virtual ~Node();

  Node(const Node& from);

  inline Node& operator=(const Node& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Node(Node&& from) noexcept
    : Node() {
    *this = ::std::move(from);
  }

  inline Node& operator=(Node&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Node& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Node* internal_default_instance() {
    return reinterpret_cast<const Node*>(
               &_Node_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Node* other);
  friend void swap(Node& a, Node& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Node* New() const PROTOBUF_FINAL { return New(NULL); }

  Node* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Node& from);
  void MergeFrom(const Node& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Node* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float latitude = 1;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 1;
  float latitude() const;
  void set_latitude(float value);

  // float longitude = 2;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  float longitude() const;
  void set_longitude(float value);

  // @@protoc_insertion_point(class_scope:betagrpc.Node)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float latitude_;
  float longitude_;
  mutable int _cached_size_;
  friend struct ::protobuf_beta_2eproto::TableStruct;
  friend void ::protobuf_beta_2eproto::InitDefaultsNodeImpl();
};
// -------------------------------------------------------------------

class Route : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:betagrpc.Route) */ {
 public:
  Route();
  virtual ~Route();

  Route(const Route& from);

  inline Route& operator=(const Route& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Route(Route&& from) noexcept
    : Route() {
    *this = ::std::move(from);
  }

  inline Route& operator=(Route&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Route& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Route* internal_default_instance() {
    return reinterpret_cast<const Route*>(
               &_Route_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Route* other);
  friend void swap(Route& a, Route& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Route* New() const PROTOBUF_FINAL { return New(NULL); }

  Route* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Route& from);
  void MergeFrom(const Route& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Route* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .betagrpc.Node nodes = 1;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 1;
  const ::betagrpc::Node& nodes(int index) const;
  ::betagrpc::Node* mutable_nodes(int index);
  ::betagrpc::Node* add_nodes();
  ::google::protobuf::RepeatedPtrField< ::betagrpc::Node >*
      mutable_nodes();
  const ::google::protobuf::RepeatedPtrField< ::betagrpc::Node >&
      nodes() const;

  // double distance = 2;
  void clear_distance();
  static const int kDistanceFieldNumber = 2;
  double distance() const;
  void set_distance(double value);

  // @@protoc_insertion_point(class_scope:betagrpc.Route)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::betagrpc::Node > nodes_;
  double distance_;
  mutable int _cached_size_;
  friend struct ::protobuf_beta_2eproto::TableStruct;
  friend void ::protobuf_beta_2eproto::InitDefaultsRouteImpl();
};
// -------------------------------------------------------------------

class RouteQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:betagrpc.RouteQuery) */ {
 public:
  RouteQuery();
  virtual ~RouteQuery();

  RouteQuery(const RouteQuery& from);

  inline RouteQuery& operator=(const RouteQuery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RouteQuery(RouteQuery&& from) noexcept
    : RouteQuery() {
    *this = ::std::move(from);
  }

  inline RouteQuery& operator=(RouteQuery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RouteQuery& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RouteQuery* internal_default_instance() {
    return reinterpret_cast<const RouteQuery*>(
               &_RouteQuery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RouteQuery* other);
  friend void swap(RouteQuery& a, RouteQuery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RouteQuery* New() const PROTOBUF_FINAL { return New(NULL); }

  RouteQuery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RouteQuery& from);
  void MergeFrom(const RouteQuery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RouteQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .betagrpc.Node origin = 1;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 1;
  const ::betagrpc::Node& origin() const;
  ::betagrpc::Node* release_origin();
  ::betagrpc::Node* mutable_origin();
  void set_allocated_origin(::betagrpc::Node* origin);

  // .betagrpc.Node destination = 2;
  bool has_destination() const;
  void clear_destination();
  static const int kDestinationFieldNumber = 2;
  const ::betagrpc::Node& destination() const;
  ::betagrpc::Node* release_destination();
  ::betagrpc::Node* mutable_destination();
  void set_allocated_destination(::betagrpc::Node* destination);

  // @@protoc_insertion_point(class_scope:betagrpc.RouteQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::betagrpc::Node* origin_;
  ::betagrpc::Node* destination_;
  mutable int _cached_size_;
  friend struct ::protobuf_beta_2eproto::TableStruct;
  friend void ::protobuf_beta_2eproto::InitDefaultsRouteQueryImpl();
};
// -------------------------------------------------------------------

class AddResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:betagrpc.AddResponse) */ {
 public:
  AddResponse();
  virtual ~AddResponse();

  AddResponse(const AddResponse& from);

  inline AddResponse& operator=(const AddResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddResponse(AddResponse&& from) noexcept
    : AddResponse() {
    *this = ::std::move(from);
  }

  inline AddResponse& operator=(AddResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddResponse* internal_default_instance() {
    return reinterpret_cast<const AddResponse*>(
               &_AddResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AddResponse* other);
  friend void swap(AddResponse& a, AddResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AddResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddResponse& from);
  void MergeFrom(const AddResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:betagrpc.AddResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_beta_2eproto::TableStruct;
  friend void ::protobuf_beta_2eproto::InitDefaultsAddResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Node

// float latitude = 1;
inline void Node::clear_latitude() {
  latitude_ = 0;
}
inline float Node::latitude() const {
  // @@protoc_insertion_point(field_get:betagrpc.Node.latitude)
  return latitude_;
}
inline void Node::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:betagrpc.Node.latitude)
}

// float longitude = 2;
inline void Node::clear_longitude() {
  longitude_ = 0;
}
inline float Node::longitude() const {
  // @@protoc_insertion_point(field_get:betagrpc.Node.longitude)
  return longitude_;
}
inline void Node::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:betagrpc.Node.longitude)
}

// -------------------------------------------------------------------

// Route

// repeated .betagrpc.Node nodes = 1;
inline int Route::nodes_size() const {
  return nodes_.size();
}
inline void Route::clear_nodes() {
  nodes_.Clear();
}
inline const ::betagrpc::Node& Route::nodes(int index) const {
  // @@protoc_insertion_point(field_get:betagrpc.Route.nodes)
  return nodes_.Get(index);
}
inline ::betagrpc::Node* Route::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:betagrpc.Route.nodes)
  return nodes_.Mutable(index);
}
inline ::betagrpc::Node* Route::add_nodes() {
  // @@protoc_insertion_point(field_add:betagrpc.Route.nodes)
  return nodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::betagrpc::Node >*
Route::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:betagrpc.Route.nodes)
  return &nodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::betagrpc::Node >&
Route::nodes() const {
  // @@protoc_insertion_point(field_list:betagrpc.Route.nodes)
  return nodes_;
}

// double distance = 2;
inline void Route::clear_distance() {
  distance_ = 0;
}
inline double Route::distance() const {
  // @@protoc_insertion_point(field_get:betagrpc.Route.distance)
  return distance_;
}
inline void Route::set_distance(double value) {
  
  distance_ = value;
  // @@protoc_insertion_point(field_set:betagrpc.Route.distance)
}

// -------------------------------------------------------------------

// RouteQuery

// .betagrpc.Node origin = 1;
inline bool RouteQuery::has_origin() const {
  return this != internal_default_instance() && origin_ != NULL;
}
inline void RouteQuery::clear_origin() {
  if (GetArenaNoVirtual() == NULL && origin_ != NULL) {
    delete origin_;
  }
  origin_ = NULL;
}
inline const ::betagrpc::Node& RouteQuery::origin() const {
  const ::betagrpc::Node* p = origin_;
  // @@protoc_insertion_point(field_get:betagrpc.RouteQuery.origin)
  return p != NULL ? *p : *reinterpret_cast<const ::betagrpc::Node*>(
      &::betagrpc::_Node_default_instance_);
}
inline ::betagrpc::Node* RouteQuery::release_origin() {
  // @@protoc_insertion_point(field_release:betagrpc.RouteQuery.origin)
  
  ::betagrpc::Node* temp = origin_;
  origin_ = NULL;
  return temp;
}
inline ::betagrpc::Node* RouteQuery::mutable_origin() {
  
  if (origin_ == NULL) {
    origin_ = new ::betagrpc::Node;
  }
  // @@protoc_insertion_point(field_mutable:betagrpc.RouteQuery.origin)
  return origin_;
}
inline void RouteQuery::set_allocated_origin(::betagrpc::Node* origin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete origin_;
  }
  if (origin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      origin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, origin, submessage_arena);
    }
    
  } else {
    
  }
  origin_ = origin;
  // @@protoc_insertion_point(field_set_allocated:betagrpc.RouteQuery.origin)
}

// .betagrpc.Node destination = 2;
inline bool RouteQuery::has_destination() const {
  return this != internal_default_instance() && destination_ != NULL;
}
inline void RouteQuery::clear_destination() {
  if (GetArenaNoVirtual() == NULL && destination_ != NULL) {
    delete destination_;
  }
  destination_ = NULL;
}
inline const ::betagrpc::Node& RouteQuery::destination() const {
  const ::betagrpc::Node* p = destination_;
  // @@protoc_insertion_point(field_get:betagrpc.RouteQuery.destination)
  return p != NULL ? *p : *reinterpret_cast<const ::betagrpc::Node*>(
      &::betagrpc::_Node_default_instance_);
}
inline ::betagrpc::Node* RouteQuery::release_destination() {
  // @@protoc_insertion_point(field_release:betagrpc.RouteQuery.destination)
  
  ::betagrpc::Node* temp = destination_;
  destination_ = NULL;
  return temp;
}
inline ::betagrpc::Node* RouteQuery::mutable_destination() {
  
  if (destination_ == NULL) {
    destination_ = new ::betagrpc::Node;
  }
  // @@protoc_insertion_point(field_mutable:betagrpc.RouteQuery.destination)
  return destination_;
}
inline void RouteQuery::set_allocated_destination(::betagrpc::Node* destination) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete destination_;
  }
  if (destination) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      destination = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, destination, submessage_arena);
    }
    
  } else {
    
  }
  destination_ = destination;
  // @@protoc_insertion_point(field_set_allocated:betagrpc.RouteQuery.destination)
}

// -------------------------------------------------------------------

// AddResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace betagrpc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_beta_2eproto__INCLUDED
